{"ast":null,"code":"var _jsxFileName = \"/Users/leifu/Documents/restaurantorder/src/Components/PayWithPayPal/PaypalCheckoutButton.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport paypal from 'paypal-checkout';\n/*\n* By AFelipe MX  @afelipelc\n*/\n\nconst PaypalCheckoutButton = ({\n  order\n}) => {\n  const paypalConf = {\n    currency: 'MXN',\n    env: 'sandbox',\n    client: {\n      sandbox: 'AQ4XW5KftrcIKShTFb5StNtlojdKRrVdVy7jTR8fx71--P0',\n      production: '--'\n    },\n    style: {\n      label: 'pay',\n      size: 'medium',\n      // small | medium | large | responsive\n      shape: 'rect',\n      // pill | rect\n      color: 'gold' // gold | blue | silver | black\n\n    }\n  };\n  const PayPalButton = paypal.Button.driver('react', {\n    React,\n    ReactDOM\n  });\n\n  const payment = (data, actions) => {\n    const payment = {\n      transactions: [{\n        amount: {\n          total: order.total,\n          currency: paypalConf.currency\n        },\n        description: 'Compra en Test App',\n        custom: order.customer || '',\n        item_list: {\n          items: order.items\n        }\n      }],\n      note_to_payer: 'Contáctanos para cualquier aclaración sobre tu compra.'\n    }; // console.log(payment);\n\n    return actions.payment.create({\n      payment\n    });\n  };\n\n  const onAuthorize = (data, actions) => {\n    return actions.payment.execute().then(response => {\n      console.log(response);\n      alert(`El Pago fue procesado correctamente, ID: ${response.id}`);\n    }).catch(error => {\n      console.log(error);\n      alert('Ocurrió un error al procesar el pago con Paypal');\n    });\n  };\n\n  const onError = error => {\n    alert('El pago con PayPal no fue realizado, vuelva a intentarlo.');\n  };\n\n  const onCancel = (data, actions) => {\n    alert('El pago con PayPal no fue realizado, el usuario canceló el proceso.');\n  };\n\n  return /*#__PURE__*/React.createElement(PayPalButton, {\n    env: paypalConf.env,\n    client: paypalConf.client,\n    payment: (data, actions) => payment(data, actions),\n    onAuthorize: (data, actions) => onAuthorize(data, actions),\n    onCancel: (data, actions) => onCancel(data, actions),\n    onError: error => onError(error),\n    style: paypalConf.style,\n    commit: true,\n    locale: \"es_MX\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default PaypalCheckoutButton;","map":{"version":3,"sources":["/Users/leifu/Documents/restaurantorder/src/Components/PayWithPayPal/PaypalCheckoutButton.js"],"names":["React","ReactDOM","paypal","PaypalCheckoutButton","order","paypalConf","currency","env","client","sandbox","production","style","label","size","shape","color","PayPalButton","Button","driver","payment","data","actions","transactions","amount","total","description","custom","customer","item_list","items","note_to_payer","create","onAuthorize","execute","then","response","console","log","alert","id","catch","error","onError","onCancel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport paypal from 'paypal-checkout';\n\n\n/*\n* By AFelipe MX  @afelipelc\n*/\n\nconst PaypalCheckoutButton = ({ order }) => {\n\n  const paypalConf = {\n    currency: 'MXN',\n    env: 'sandbox',\n    client: {\n      sandbox: 'AQ4XW5KftrcIKShTFb5StNtlojdKRrVdVy7jTR8fx71--P0',\n      production: '--',\n    },\n    style: {\n      label: 'pay',\n      size: 'medium', // small | medium | large | responsive\n      shape: 'rect',   // pill | rect\n      color: 'gold',  // gold | blue | silver | black\n    },\n  };\n\n  const PayPalButton = paypal.Button.driver('react', { React, ReactDOM });\n\n  const payment = (data, actions) => {\n    const payment = {\n      transactions: [\n        {\n          amount: {\n            total: order.total,\n            currency: paypalConf.currency,\n          },\n          description: 'Compra en Test App',\n          custom: order.customer || '',\n          item_list: {\n            items: order.items\n          },\n        },\n      ],\n      note_to_payer: 'Contáctanos para cualquier aclaración sobre tu compra.',\n    };\n\n    // console.log(payment);\n    return actions.payment.create({\n      payment,\n    });\n  };\n\n  const onAuthorize = (data, actions) => {\n    return actions.payment.execute()\n      .then(response => {\n        console.log(response);\n        alert(`El Pago fue procesado correctamente, ID: ${response.id}`)\n      })\n      .catch(error => {\n        console.log(error);\n\t      alert('Ocurrió un error al procesar el pago con Paypal');\n      });\n  };\n\n  const onError = (error) => {\n    alert ('El pago con PayPal no fue realizado, vuelva a intentarlo.' );\n  };\n\n  const onCancel = (data, actions) => {\n    alert( 'El pago con PayPal no fue realizado, el usuario canceló el proceso.' );\n  };\n\n\n  return (\n    <PayPalButton\n      env={paypalConf.env}\n      client={paypalConf.client}\n      payment={(data, actions) => payment(data, actions)}\n      onAuthorize={(data, actions) => onAuthorize(data, actions)}\n      onCancel={(data, actions) => onCancel(data, actions)}\n      onError={(error) => onError(error)}\n      style={paypalConf.style}\n      commit\n      locale=\"es_MX\"\n    />\n\n  );\n}\n\nexport default PaypalCheckoutButton;"]},"metadata":{},"sourceType":"module"}
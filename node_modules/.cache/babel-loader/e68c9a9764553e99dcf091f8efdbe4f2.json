{"ast":null,"code":"var _jsxFileName = \"/Users/leifu/Documents/restaurantorder/src/Components/PayWithPayPal/PayWithPayPal.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction PayWithPayPal(props) {\n  const {\n    total\n  } = props;\n  const [paidFor, setPaidFor] = useState(false);\n  const [error, setError] = useState(null);\n  const paypalRef = useRef();\n  useEffect(() => {\n    window.paypal.Buttons({\n      createOrder: (data, actions) => {\n        return actions.order.create({\n          purchase_units: [{\n            description: 'Laptop store checkout',\n            amount: {\n              currency_code: 'USD',\n              value: 10.00\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        setPaidFor(true);\n        console.log('ORDER', order);\n      },\n      onError: err => {\n        setError(err);\n        console.error('ERROR', err);\n      }\n    }).render(paypalRef.current);\n  }, [total]);\n\n  if (paidFor) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Thanks for making the purchase.\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Error in processing order. Please Retry again\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: paypalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default PayWithPayPal;","map":{"version":3,"sources":["/Users/leifu/Documents/restaurantorder/src/Components/PayWithPayPal/PayWithPayPal.js"],"names":["React","useState","useEffect","useRef","PayWithPayPal","props","total","paidFor","setPaidFor","error","setError","paypalRef","window","paypal","Buttons","createOrder","data","actions","order","create","purchase_units","description","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAGA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMU,SAAS,GAAGR,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,MAAM,CAACC,MAAP,CACKC,OADL,CACa;AACLC,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC5B,eAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,UAAAA,cAAc,EAAE,CAAC;AACbC,YAAAA,WAAW,EAAE,uBADA;AAEbC,YAAAA,MAAM,EAAE;AACJC,cAAAA,aAAa,EAAE,KADX;AAEJC,cAAAA,KAAK,EAAE;AAFH;AAFK,WAAD;AADQ,SAArB,CAAP;AASH,OAXI;AAYLC,MAAAA,SAAS,EAAE,OAAOT,IAAP,EAAaC,OAAb,KAAyB;AAChC,cAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAR,CAAcQ,OAAd,EAApB;AACAlB,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBV,KAArB;AACH,OAhBI;AAiBLW,MAAAA,OAAO,EAAEC,GAAG,IAAI;AACZpB,QAAAA,QAAQ,CAACoB,GAAD,CAAR;AACAH,QAAAA,OAAO,CAAClB,KAAR,CAAc,OAAd,EAAuBqB,GAAvB;AACH;AApBI,KADb,EAuBKC,MAvBL,CAuBYpB,SAAS,CAACqB,OAvBtB;AAwBH,GAzBQ,EAyBN,CAAC1B,KAAD,CAzBM,CAAT;;AA2BA,MAAIC,OAAJ,EAAa;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ;AAKH;;AAED,MAAIE,KAAJ,EAAW;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ;AAKH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAED,eAAeP,aAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\n\nfunction PayWithPayPal (props) {\n    const { total } = props\n    const [paidFor, setPaidFor] = useState(false);\n    const [error, setError] = useState(null);\n    const paypalRef = useRef();\n\n    useEffect(() => {\n        window.paypal\n            .Buttons({\n                createOrder: (data, actions) => {\n                    return actions.order.create({\n                        purchase_units: [{\n                            description: 'Laptop store checkout',\n                            amount: {\n                                currency_code: 'USD',\n                                value: 10.00,\n                            }\n                        }]\n                    });\n                },\n                onApprove: async (data, actions) => {\n                    const order = await actions.order.capture();\n                    setPaidFor(true);\n                    console.log('ORDER', order);\n                },\n                onError: err => {\n                    setError(err);\n                    console.error('ERROR', err);\n                },\n            })\n            .render(paypalRef.current);\n    }, [total]);\n\n    if (paidFor) {\n        return (\n            <div>\n                Thanks for making the purchase.\n            </div>\n        )\n    }\n\n    if (error) {\n        return (\n            <div>\n                Error in processing order. Please Retry again\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <div ref={paypalRef} />\n        </div>\n    )\n}\n\nexport default PayWithPayPal"]},"metadata":{},"sourceType":"module"}
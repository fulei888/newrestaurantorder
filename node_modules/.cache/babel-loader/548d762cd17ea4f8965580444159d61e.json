{"ast":null,"code":"var _jsxFileName = \"/Users/leifu/Documents/restaurantorder/src/Components/PayWithPayPal/PayWithPayPal.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\nfunction PayWithPayPal(props) {\n  const {\n    total\n  } = props;\n  const [paidFor, setPaidFor] = useState(false);\n  const [error, setError] = useState(null);\n  const paypalRef = useRef();\n  useEffect(() => {\n    if (window.paypal) {\n      window.paypal.Buttons({\n        createOrder: (data, actions) => {\n          return actions.order.create({\n            intent: 'CAPTURE',\n            purchase_units: [{\n              description: 'food orders',\n              amount: {\n                currency_code: 'US',\n                value: 10.00\n              }\n            }]\n          });\n        },\n        onApprove: async (data, actions) => {\n          const order = await actions.order.capture();\n          setPaidFor(true);\n          console.log(order);\n        },\n        onError: err => {\n          setError(err);\n          console.error(err);\n        }\n      }).render(paypalRef.current);\n    }\n  }, [total]);\n\n  if (paidFor) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"Thanks for making the purchase\");\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Error in processing payment. Please try again\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Total - Rs. \", total), /*#__PURE__*/React.createElement(\"div\", {\n    ref: paypalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default PayWithPayPal;","map":{"version":3,"sources":["/Users/leifu/Documents/restaurantorder/src/Components/PayWithPayPal/PayWithPayPal.js"],"names":["React","useState","useRef","useEffect","ListGroup","ListGroupItem","PayWithPayPal","props","total","paidFor","setPaidFor","error","setError","paypalRef","window","paypal","Buttons","createOrder","data","actions","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","capture","console","log","onError","err","render","current"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,YAAvC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAM;AAACC,IAAAA;AAAD,MAAUD,KAAhB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMY,SAAS,GAAGX,MAAM,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGW,MAAM,CAACC,MAAV,EAAkB;AAClBD,MAAAA,MAAM,CAACC,MAAP,CAAcC,OAAd,CACI;AACIC,QAAAA,WAAW,EAAC,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC3B,iBAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,YAAAA,MAAM,EAAE,SADgB;AAExBC,YAAAA,cAAc,EAAE,CAAC;AACbC,cAAAA,WAAW,EAAE,aADA;AAEbC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,aAAa,EAAC,IADV;AAEJC,gBAAAA,KAAK,EAAE;AAFH;AAFK,aAAD;AAFQ,WAArB,CAAP;AAWH,SAbL;AAcIC,QAAAA,SAAS,EAAE,OAAMV,IAAN,EAAYC,OAAZ,KAAwB;AAC/B,gBAAMC,KAAK,GAAG,MAAMD,OAAO,CAACC,KAAR,CAAcS,OAAd,EAApB;AACAnB,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAoB,UAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,SAlBL;AAmBIY,QAAAA,OAAO,EAAEC,GAAG,IAAI;AACZrB,UAAAA,QAAQ,CAACqB,GAAD,CAAR;AACAH,UAAAA,OAAO,CAACnB,KAAR,CAAcsB,GAAd;AACH;AAtBL,OADJ,EAwBGC,MAxBH,CAwBUrB,SAAS,CAACsB,OAxBpB;AAyBH;AACA,GA5BQ,EA4BN,CAAC3B,KAAD,CA5BM,CAAT;;AA6BA,MAAGC,OAAH,EAAY;AACR,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ;AAKH;;AAED,MAAGE,KAAH,EAAU;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDADJ;AAKH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBH,KAAlB,CAJJ,eAKI;AAAK,IAAA,GAAG,EAAEK,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ;AAWH;;AAED,eAAeP,aAAf","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\nimport {ListGroup, ListGroupItem} from 'reactstrap';\n\nfunction PayWithPayPal(props) {\n    const {total} = props;\n    const [paidFor, setPaidFor] = useState(false);\n    const [error, setError] = useState(null);\n    const paypalRef = useRef();\n    \n    useEffect(()=> {\n        if(window.paypal) {\n        window.paypal.Buttons(\n            {\n                createOrder:(data, actions) => {\n                    return actions.order.create({\n                        intent: 'CAPTURE',\n                        purchase_units: [{\n                            description: 'food orders',\n                            amount: {\n                                currency_code:'US',\n                                value: 10.00\n                            }\n\n                        }]\n                    })\n                },\n                onApprove: async(data, actions) => {\n                    const order = await actions.order.capture();\n                    setPaidFor(true);\n                    console.log(order)\n                },\n                onError: err => {\n                    setError(err)\n                    console.error(err)\n                }\n        }).render(paypalRef.current)\n    }\n    }, [total])\n    if(paidFor) {\n        return (\n            <div>\n                Thanks for making the purchase\n            </div>\n        )\n    }\n\n    if(error) {\n        return (\n            <div>\n                Error in processing payment. Please try again\n            </div>\n        )\n    }\n    return (\n        <div>\n            <ListGroup>\n                {/* {items.map((item, index) => \n                    <ListGroupItem key={index}>{item.name} - {item.value}</ListGroupItem>\n                )} */}\n                <div>Total - Rs. {total}</div>\n                <div ref={paypalRef} />\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default PayWithPayPal;"]},"metadata":{},"sourceType":"module"}
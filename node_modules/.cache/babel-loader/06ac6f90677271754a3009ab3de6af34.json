{"ast":null,"code":"import _regeneratorRuntime from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n        height: 40px;\\n        display: flex;\\n        align-items: center;\\n    \\n        & .StripeElement {\\n        width: 100%;\\n        padding: 10px;\\n        }\\n    \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import localServerAxios from\"axios\";import Button from'../UI/Button/Button';import Spinner from'../UI/Spinner/Spinner';import classes from'./ContactData.module.css';import axios from'../../axios-orders';import Input from'../UI/Input/Input';import Row from\"./prebuilt/Row\";import BillingDetailsFields from\"./prebuilt/BillingDetailsFields\";import SubmitButton from\"./prebuilt/SubmitButton\";import CheckoutError from\"./prebuilt/CheckoutError\";import styled from\"@emotion/styled\";import{CardElement,useElements,useStripe}from'@stripe/react-stripe-js';// import {Route} from 'react-router-dom';\n// import EndPage from '../EndPage/EndePage';\nvar ContactData=function ContactData(props){var _useState=useState({name:{elementType:'input',elementConfig:{type:'text',placeholder:'Your Name',name:'name'},value:'',validation:{required:true},valid:false,touched:false},street:{elementType:'input',elementConfig:{type:'text',placeholder:'Street',name:'line1'},value:'',validation:{required:true},valid:false,touched:false},city:{elementType:'input',elementConfig:{type:'text',placeholder:'City',name:'city'},value:'',validation:{required:true},valid:false,touched:false},state:{elementType:'input',elementConfig:{type:'text',placeholder:'State',name:'state'},value:'',validation:{required:true},valid:false,touched:false},zipCode:{elementType:'input',elementConfig:{type:'text',placeholder:'ZIP Code',name:'zip'},value:'',validation:{required:true,minLength:5,maxLength:5,isNumeric:true},valid:false,touched:false},phone:{elementType:'input',elementConfig:{type:'text',placeholder:'Phone Number',name:'phone'},value:'',validation:{isNumeric:true},valid:false,touched:false},email:{elementType:'input',elementConfig:{type:'email',placeholder:'Your E-Mail',name:'email'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},deliveryMethod:{elementType:'select',elementConfig:{options:[{value:'fastest',displayValue:'Fastest'},{value:'cheapest',displayValue:'Cheapest'}],name:'deliveryMethod'},value:'',validation:{},valid:true}}),_useState2=_slicedToArray(_useState,2),orderForm=_useState2[0],setOrderForm=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),formIsValid=_useState4[0],setFormIsValid=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isProcessing=_useState8[0],setIsProcessing=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),checkoutError=_useState10[0],setCheckoutError=_useState10[1];var orderHandler=function orderHandler(event){event.preventDefault();setLoading(true);var formData={};for(var formElementIdentifier in orderForm){formData[formElementIdentifier]=orderForm[formElementIdentifier].value;}var updateDishes=_objectSpread({},props.dishes);Object.keys(updateDishes).forEach(function(key){return(updateDishes[key]===0||null)&&delete updateDishes[key];});console.log('dishes',updateDishes);var order={dishes:updateDishes,price:props.totalPrice,orderData:formData};axios.post('/orders.json',order).then(function(response){setLoading(false);props.history.replace('/endpage');console.log('props.match.path'+props.match.path);}).catch(function(error){setLoading(false);});};var checkValidity=function checkValidity(value,rules){var isValid=true;if(!rules){return true;}if(rules.required){isValid=value.trim()!==''&&isValid;}if(rules.minLength){isValid=value.length>=rules.minLength&&isValid;}if(rules.maxLength){isValid=value.length<=rules.maxLength&&isValid;}if(rules.isEmail){var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=pattern.test(value)&&isValid;}if(rules.isNumeric){var _pattern=/^\\d+$/;isValid=_pattern.test(value)&&isValid;}return isValid;};var inputChangedHandler=function inputChangedHandler(event,inputIdentifier){var updatedOrderForm=_objectSpread({},orderForm);var updatedFormElement=_objectSpread({},updatedOrderForm[inputIdentifier]);updatedFormElement.value=event.target.value;updatedFormElement.valid=checkValidity(updatedFormElement.value,updatedFormElement.validation);updatedFormElement.touched=true;updatedOrderForm[inputIdentifier]=updatedFormElement;var formIsValid=true;for(var _inputIdentifier in updatedOrderForm){//console.log(updatedOrderForm[inputIdentifier],updatedOrderForm[inputIdentifier].valid);\nformIsValid=updatedOrderForm[_inputIdentifier].valid&&formIsValid;}//console.log('formIsValid',formIsValid);\nsetOrderForm(updatedOrderForm);setFormIsValid(formIsValid);};var cardElementOptions={style:{base:{fontSize:\"16px\",color:\"#9b9b9b\",\"::placeholder\":{color:\"#9b9b9b\"}},invalid:{color:'#aa272f',iconColor:'#aa272f'}},hidePostalCode:true};var CardElementContainer=styled.div(_templateObject());var stripe=useStripe();var elements=useElements();var handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(ev){var billingDetails,cardElement,res,clientSecret,result,formData,formElementIdentifier,updateDishes,order,doIt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ev.preventDefault();ev.persist();//submitHandler\n// setIsProcessing(true);\nconsole.log('event',ev.target);billingDetails={name:ev.target.name.value,email:ev.target.email.value,address:{city:ev.target.city.value,line1:ev.target.line1.value,state:ev.target.state.value,postal_code:ev.target.zip.value}};cardElement=elements.getElement(CardElement);_context.next=7;return localServerAxios.post('http://localhost:8585/pay',{amount:(props.totalPrice*100).toFixed(0),billingDetails:billingDetails});case 7:res=_context.sent;clientSecret=res.data['client_secret'];console.log('clientSecret',clientSecret);_context.next=12;return stripe.confirmCardPayment(clientSecret,{payment_method:{card:cardElement,billing_details:billingDetails}});case 12:result=_context.sent;if(!result.error){_context.next=17;break;}// Show error to your customer (e.g., insufficient funds)\nconsole.log(result.error.message);_context.next=29;break;case 17:if(!(result.paymentIntent.status==='succeeded')){_context.next=29;break;}console.log('Money is in the bank!');//orderHandler\nsetLoading(true);formData={};for(formElementIdentifier in orderForm){formData[formElementIdentifier]=orderForm[formElementIdentifier].value;}updateDishes=_objectSpread({},props.dishes);Object.keys(updateDishes).forEach(function(key){return(updateDishes[key]===0||null)&&delete updateDishes[key];});console.log('dishes',updateDishes);order={dishes:updateDishes,price:props.totalPrice,orderData:formData};_context.next=28;return axios.post('/orders.json',order).then(function(response){console.log('toFirebase success');props.onSuccessfulCheckout();}).catch(function(error){setLoading(false);});case 28:doIt=_context.sent;case 29:case\"end\":return _context.stop();}}},_callee);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();var formElementsArray=[];for(var key in orderForm){formElementsArray.push({id:key,config:orderForm[key]});}var form=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleFormSubmit},formElementsArray.map(function(formElement){return/*#__PURE__*/React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return inputChangedHandler(event,formElement.id);}});}),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(CardElementContainer,null,/*#__PURE__*/React.createElement(CardElement,{options:cardElementOptions}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(SubmitButton,{disabled:isProcessing||!formIsValid},isProcessing?\"Processing...\":\"Pay $\".concat(props.totalPrice))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(SubmitButton,{style:{backgroundColor:'#333',borderColor:'#333'},onClick:props.goBack},\"Cancle\"))));if(loading){form=/*#__PURE__*/React.createElement(Spinner,null);}return/*#__PURE__*/React.createElement(\"div\",{className:classes.ContactData},/*#__PURE__*/React.createElement(\"h4\",null,\"Enter your Contact Data & Pay\"),form);};export default ContactData;","map":{"version":3,"sources":["/Users/leifu/Documents/restaurantorder/src/Components/ContactData/ContactData.js"],"names":["React","useState","localServerAxios","Button","Spinner","classes","axios","Input","Row","BillingDetailsFields","SubmitButton","CheckoutError","styled","CardElement","useElements","useStripe","ContactData","props","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","street","city","state","zipCode","minLength","maxLength","isNumeric","phone","email","isEmail","deliveryMethod","options","displayValue","orderForm","setOrderForm","formIsValid","setFormIsValid","loading","setLoading","isProcessing","setIsProcessing","checkoutError","setCheckoutError","orderHandler","event","preventDefault","formData","formElementIdentifier","updateDishes","dishes","Object","keys","forEach","key","console","log","order","price","totalPrice","orderData","post","then","response","history","replace","match","path","catch","error","checkValidity","rules","isValid","trim","length","pattern","test","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","cardElementOptions","style","base","fontSize","color","invalid","iconColor","hidePostalCode","CardElementContainer","div","stripe","elements","handleFormSubmit","ev","persist","billingDetails","address","line1","postal_code","zip","cardElement","getElement","amount","toFixed","res","clientSecret","data","confirmCardPayment","payment_method","card","billing_details","result","message","paymentIntent","status","onSuccessfulCheckout","doIt","formElementsArray","push","id","config","form","map","formElement","backgroundColor","borderColor","goBack"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport localServerAxios from \"axios\";\nimport Button from '../UI/Button/Button'\nimport Spinner from '../UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../axios-orders';\nimport Input from '../UI/Input/Input';\n\nimport Row from \"./prebuilt/Row\";\nimport BillingDetailsFields from \"./prebuilt/BillingDetailsFields\";\nimport SubmitButton from \"./prebuilt/SubmitButton\";\nimport CheckoutError from \"./prebuilt/CheckoutError\";\nimport styled from \"@emotion/styled\";\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\n// import {Route} from 'react-router-dom';\n// import EndPage from '../EndPage/EndePage';\nconst ContactData = (props) => {\n  const [orderForm, setOrderForm] = useState (\n      {\n        name: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your Name',\n                name: 'name'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        street: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Street',\n                name: 'line1'\n\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n       \n        city: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'City',\n                name: 'city'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        state: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'State',\n                name: 'state'\n            },\n            value: '',\n            validation: {\n                required: true\n            },\n            valid: false,\n            touched: false\n        },\n        zipCode: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'ZIP Code',\n                name: 'zip'\n            },\n            value: '',\n            validation: {\n                required: true,\n                minLength: 5,\n                maxLength: 5,\n                isNumeric: true\n            },\n            valid: false,\n            touched: false\n        },\n        phone: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Phone Number',\n                name: 'phone'\n            },\n            value: '',\n            validation: {\n                isNumeric: true\n            },\n            valid: false,\n            touched: false\n        },\n        email: {\n            elementType: 'input',\n            elementConfig: {\n                type: 'email',\n                placeholder: 'Your E-Mail',\n                name:'email'\n            },\n            value: '',\n            validation: {\n                required: true,\n                isEmail: true\n            },\n            valid: false,\n            touched: false\n        },\n        deliveryMethod: {\n            elementType: 'select',\n            elementConfig: {\n                options: [\n                    {value: 'fastest', displayValue: 'Fastest'},\n                    {value: 'cheapest', displayValue: 'Cheapest'}\n                ],\n                name:'deliveryMethod'\n            },\n            value: '',\n            validation: {},\n            valid: true\n        }\n    }\n  ) \n        const [formIsValid, setFormIsValid] = useState(false);\n        const [loading, setLoading] = useState(false);\n        const [isProcessing, setIsProcessing] = useState(false);\n        const [checkoutError, setCheckoutError] = useState();\n     \n\n    const orderHandler = ( event ) => {\n       \n        event.preventDefault();\n        setLoading(true);\n        const formData = {};\n        for (let formElementIdentifier in orderForm) {\n            formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\n        }\n        let updateDishes = {...props.dishes};\n        Object.keys(updateDishes).forEach((key) => (updateDishes[key] === 0||null) && delete updateDishes[key]);\n        console.log('dishes', updateDishes);\n        const order = {\n            dishes: updateDishes,\n            price: props.totalPrice,\n            orderData: formData\n        }\n        axios.post( '/orders.json', order )\n            .then( response => {\n                setLoading(false);\n                props.history.replace( '/endpage' );\n                console.log('props.match.path'+props.match.path)\n            } )\n            .catch( error => {\n                setLoading(false);\n            } );\n    }\n\n    const checkValidity = (value, rules) => {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n   const inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            //console.log(updatedOrderForm[inputIdentifier],updatedOrderForm[inputIdentifier].valid);\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        //console.log('formIsValid',formIsValid);\n        setOrderForm(updatedOrderForm); \n        setFormIsValid(formIsValid);\n    }\n    \n\n        \n    const cardElementOptions = {\n        style: {\n            base: {\n                fontSize: \"16px\",\n                color: \"#9b9b9b\",\n                \"::placeholder\": {\n                    color: \"#9b9b9b\"\n                }\n\n            },\n            invalid: {\n                color: '#aa272f',\n                iconColor: '#aa272f',\n            }   \n        },\n        hidePostalCode: true,\n    }\n\n\n\n    const CardElementContainer = styled.div`\n        height: 40px;\n        display: flex;\n        align-items: center;\n    \n        & .StripeElement {\n        width: 100%;\n        padding: 10px;\n        }\n    `;\n    \n       const stripe = useStripe();\n       const elements = useElements();\n\n    const handleFormSubmit = async ev => {\n        ev.preventDefault();\n        ev.persist()\n        \n        //submitHandler\n        // setIsProcessing(true);\n        console.log('event', ev.target);\n        const billingDetails = {\n            name: ev.target.name.value,\n            email: ev.target.email.value,\n            address: {\n            city: ev.target.city.value,\n            line1: ev.target.line1.value,\n            state: ev.target.state.value,\n            postal_code: ev.target.zip.value\n            }\n        }\n        \n        const cardElement = elements.getElement(CardElement);\n       \n        const res = await localServerAxios.post('http://localhost:8585/pay', {\n        amount: (props.totalPrice*100).toFixed(0), \n        billingDetails: billingDetails,\n        });\n\n        const clientSecret = res.data['client_secret'];\n        console.log('clientSecret',clientSecret);\n        \n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: cardElement,\n              billing_details: billingDetails\n            },\n          });\n\n\n\n\n         \n        \n          if (result.error) {\n            // Show error to your customer (e.g., insufficient funds)\n            \n            \n            console.log(result.error.message);\n          } else {\n            // The payment has been processed!\n            if (result.paymentIntent.status === 'succeeded') {\n              console.log('Money is in the bank!');\n\n               //orderHandler\n        setLoading(true);\n        const formData = {};\n        for (let formElementIdentifier in orderForm) {\n            formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\n        }\n        let updateDishes = {...props.dishes};\n        Object.keys(updateDishes).forEach((key) => (updateDishes[key] === 0||null) && delete updateDishes[key]);\n        console.log('dishes', updateDishes);\n        const order = {\n            dishes: updateDishes,\n            price: props.totalPrice,\n            orderData: formData\n        }\n        const doIt = await axios.post( '/orders.json', order )\n            .then( response => {\n              \n               console.log('toFirebase success')\n               props.onSuccessfulCheckout();\n            } )\n            .catch( error => {\n                setLoading(false);\n            } );\n\n              \n            \n              // Show a success message to your customer\n              // There's a risk of the customer closing the window before callback\n              // execution. Set up a webhook or plugin to listen for the\n              // payment_intent.succeeded event that handles any business critical\n              // post-payment actions.\n            }\n          }\n\n        };\n\n\n    const formElementsArray = [];\n    for (let key in orderForm) {\n        formElementsArray.push({\n            id: key,\n            config: orderForm[key]\n        });\n    }\n    let form = (\n        <div>\n        <form onSubmit={handleFormSubmit}>\n            {formElementsArray.map(formElement => (\n                <Input \n                    key={formElement.id}\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={(event) => inputChangedHandler(event, formElement.id)} />\n            ))}\n                <Row>\n                    <CardElementContainer>\n                    <CardElement options={cardElementOptions}/>\n                    </CardElementContainer>\n                </Row>\n\n                <Row>\n                    <SubmitButton disabled={isProcessing||!formIsValid}>\n                    {isProcessing ? \"Processing...\" : `Pay $${props.totalPrice}`}\n                    </SubmitButton>\n                </Row>\n\n                <Row>\n                    <SubmitButton  style={{ backgroundColor: '#333', borderColor:'#333' }} onClick = {props.goBack}>Cancle</SubmitButton>\n                </Row>\n\n                \n               \n             </form>\n               \n           </div>\n       \n    );\n    if ( loading ) {\n        form = <Spinner />;\n    }\n        \n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data & Pay</h4>\n                {form}\n                {/* <form onSubmit={handleFormSubmit}>\n                    <Row>\n                        <BillingDetailsFields />\n                    </Row>\n                    <Row>\n                        <CardElementContainer>\n                        <CardElement options={cardElementOptions}/>\n                        </CardElementContainer>\n                    </Row>\n                    {checkoutError && <CheckoutError>{checkoutError}</CheckoutError>}\n                    <Row>\n                        <SubmitButton disabled={isProcessing}>\n                        {isProcessing ? \"Processing...\" : `Pay $${props.price}`}\n                        </SubmitButton>\n                    </Row>\n                </form> */}\n            </div>\n        );\n}\n\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}
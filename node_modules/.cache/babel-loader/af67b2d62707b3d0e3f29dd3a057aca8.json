{"ast":null,"code":"import _defineProperty from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/leifu/Documents/restaurantorder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{connect}from'react-redux';import Input from'../../Components/UI/Input/Input';import Button from'../../Components/UI/Button/Button';import classes from'./Auth.module.css';import*as actions from'../../Store/actions/index';import Spinner from'../../Components/UI/Spinner/Spinner';import{Redirect}from'react-router-dom';var Auth=function Auth(props){var _useState=useState({email:{elementType:'input',elementConfig:{type:'email',placeholder:'Mail Address'},value:'',validation:{required:true,isEmail:true},valid:false,touched:false},password:{elementType:'input',elementConfig:{type:'password',placeholder:'Password'},value:'',validation:{required:true,minLength:6},valid:false,touched:false}}),_useState2=_slicedToArray(_useState,2),controls=_useState2[0],setControls=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSignup=_useState4[0],setIsSignup=_useState4[1];var authRedirectPath=props.authRedirectPath,onSetAuthRedirectPath=props.onSetAuthRedirectPath;useEffect(function(){if(authRedirectPath!=='/'){onSetAuthRedirectPath();}},[authRedirectPath,onSetAuthRedirectPath]);var checkValidity=function checkValidity(value,rules){var isValid=true;if(!rules){return true;}if(rules.required){isValid=value.trim()!==''&&isValid;}if(rules.minLength){isValid=value.length>=rules.minLength&&isValid;}if(rules.maxLength){isValid=value.length<=rules.maxLength&&isValid;}if(rules.isEmail){var pattern=/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;isValid=pattern.test(value)&&isValid;}if(rules.isNumeric){var _pattern=/^\\d+$/;isValid=_pattern.test(value)&&isValid;}return isValid;};var inputChangedHandler=function inputChangedHandler(event,controlName){var updatedControls=_objectSpread(_objectSpread({},controls),{},_defineProperty({},controlName,_objectSpread(_objectSpread({},controls[controlName]),{},{value:event.target.value,valid:checkValidity(event.target.value,controls[controlName].validation),touched:true})));setControls(updatedControls);};var submitHandler=function submitHandler(event){event.preventDefault();props.onAuth(controls.email.value,controls.password.value,isSignup);};var switchAuthModeHandler=function switchAuthModeHandler(){setIsSignup(!isSignup);};var formElementsArray=[];for(var key in controls){formElementsArray.push({id:key,config:controls[key]});}var form=formElementsArray.map(function(formElement){return/*#__PURE__*/React.createElement(Input,{key:formElement.id,elementType:formElement.config.elementType,elementConfig:formElement.config.elementConfig,value:formElement.config.value,invalid:!formElement.config.valid,shouldValidate:formElement.config.validation,touched:formElement.config.touched,changed:function changed(event){return inputChangedHandler(event,formElement.id);}});});if(props.loading){form=/*#__PURE__*/React.createElement(Spinner,null);}var errorMessage=null;if(props.error){errorMessage=/*#__PURE__*/React.createElement(\"p\",null,\" \",props.error.message);}var authRedirect=null;if(props.isAuthenticated){authRedirect=/*#__PURE__*/React.createElement(Redirect,{to:props.authRedirectPath});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.Auth},authRedirect,errorMessage,/*#__PURE__*/React.createElement(\"form\",{onSubmit:submitHandler},form,/*#__PURE__*/React.createElement(Button,{btnType:\"Success\"},\"ADMIN SIGN IN\")));};var mapStateToProps=function mapStateToProps(state){return{loading:state.loading,error:state.error,isAuthenticated:state.token!=null,authRedirectPath:state.authRedirectPath};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onAuth:function onAuth(email,password,isSignup){return dispatch(actions.auth(email,password,isSignup));},onSetAuthRedirectPath:function onSetAuthRedirectPath(){return dispatch(actions.setAuthRedirectPath('/'));}};};export default connect(mapStateToProps,mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/leifu/Documents/restaurantorder/src/Container/Auth/Auth.js"],"names":["React","useState","useEffect","connect","Input","Button","classes","actions","Spinner","Redirect","Auth","props","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","controls","setControls","isSignup","setIsSignup","authRedirectPath","onSetAuthRedirectPath","checkValidity","rules","isValid","trim","length","maxLength","pattern","test","isNumeric","inputChangedHandler","event","controlName","updatedControls","target","submitHandler","preventDefault","onAuth","switchAuthModeHandler","formElementsArray","key","push","id","config","form","map","formElement","loading","errorMessage","error","message","authRedirect","isAuthenticated","mapStateToProps","state","token","mapDispatchToProps","dispatch","auth","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Input from '../../Components/UI/Input/Input';\nimport Button from '../../Components/UI/Button/Button';\nimport classes from './Auth.module.css';\nimport * as actions from '../../Store/actions/index';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nimport {Redirect} from 'react-router-dom';\n\nconst Auth = props => {\n    \n    const [controls, setControls] = useState(\n        {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        }\n    )\n    const [isSignup, setIsSignup] = useState(false);\n\n    const { authRedirectPath, onSetAuthRedirectPath} = props;\n    useEffect(()=>{\n        if ( authRedirectPath !== '/') {\n            onSetAuthRedirectPath();\n        }\n    }, [authRedirectPath, onSetAuthRedirectPath])\n\n    const checkValidity = (value, rules) => {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    const inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...controls,\n            [controlName]: {\n                ...controls[controlName],\n                value: event.target.value,\n                valid: checkValidity(event.target.value, controls[controlName].validation),\n                touched: true\n            }\n        };\n        setControls(updatedControls);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onAuth(controls.email.value, controls.password.value, isSignup);\n    }\n\n    const switchAuthModeHandler = () => {\n        setIsSignup(!isSignup)\n    }\n\n\n        const formElementsArray = [];\n        for ( let key in controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        if (props.loading) {\n            form = <Spinner />\n        }\n        let errorMessage = null;\n\n        if(props.error) {\n            errorMessage = (\n            <p> {props.error.message}</p>\n            )\n        }\n\n        let authRedirect = null;\n        if (props.isAuthenticated) {\n            authRedirect = <Redirect to = {props.authRedirectPath} />\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">ADMIN SIGN IN</Button>\n                </form>\n        {/* <Button clicked = {switchAuthModeHandler} \n        btnType=\"Danger\">SWITCH TO {isSignup? \"SIGN IN\" : \"SIGN UP\"}</Button> */}\n            </div>\n        );\n    \n}\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.token != null,\n        authRedirectPath: state.authRedirectPath\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}